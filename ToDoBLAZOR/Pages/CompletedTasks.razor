@page "/CompletedTasks"
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject NavigationManager NavManager
@inject ISqlDataAccess _db

<h3>Completed Tasks</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Description</th>
            <th>Priority</th>
            <th>Date Completed</th>
            <th>Subtasks</th>
            <th>Tags</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var t in tasks)
        {
            if (t.CompletionFlag)
            {
                <tr>
                    <td>@t.Description</td>
                    <td>@t.Priority</td>
                    <td>@t.DateCompleted.ToString("yyyy/MM/dd")</td>
                    <td>
                        @if (t.Subtasks is null || t.Subtasks.Count == 0)
                        {
                            <ul>There are no subtasks</ul>
                        }
                        else
                        {
                            foreach (var s in t.Subtasks)
                            {
                                <ul>
                                    <li>
                                        @s.Description
                                    </li>

                                </ul>

                            }
                        }
                    </td>
                    <td>
                        @if (t.Tags is null || t.Tags.Count == 0)
                        {
                            <ul>There are no tags</ul>
                        }
                        else
                        {
                            foreach (var tag in t.Tags)
                            {
                                <ul>@tag.Name</ul>
                            }
                        }
                    </td>
                    <td>
                        <div class="btn-group">
                            <button class="btn-danger" @onclick="e=> OnDelete(t.Id)">Delete</button>
                            <button class="btn-secondary" @onclick="e=> ShowCopyTask(t)">Copy</button>
                        </div>

                    </td>
                </tr>
            }
        }
    </tbody>
</table>
@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    private List<TaskModel> tasks;

    private void OnDelete(int Id)
    {
        _db.DeleteTask(Id);
        tasks.RemoveAll(x => x.Id == Id);
    }

    async Task ShowCopyTask(TaskModel model)
    {

        var parameters = new ModalParameters();
        parameters.Add(nameof(CopyTask.copyTask), model);

        var formModal = Modal.Show<CopyTask>("Copy Task", parameters);
        var result = await formModal.Result;
        if (!result.Cancelled)
        {
            NavManager.NavigateTo("/TodoList");
        }

    }

    protected override void OnInitialized()
    {
        tasks = _db.Tasks_GetAll();
    }
}
