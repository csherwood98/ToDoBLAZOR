<div>
    <EditForm Model="@newTask" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <label for="Description">Task Description</label>
            <InputTextArea class="form-control " id="Description" rows="3" maxlength="300" placeholder="Required Field. Maximum 300 characters." required @bind-Value="newTask.Description"></InputTextArea>
        </div>
        <div class="form-group">
            <label for="Priority">Priority</label>
            <InputSelect class="form-control" id="Priority" @bind-Value="newTask.Priority">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="DueDate">Due Date</label>
            <InputDate id="DueDate" @bind-Value="newTask.DueDate" />
        </div>
        <button type="submit" class="btn btn-primary">Create</button>
        <button @onclick="Cancel" class="btn btn-danger">Cancel</button>
    </EditForm>


</div>

@code { [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    private TaskModel newTask = new TaskModel();

    private void HandleValidSubmit()
    {
        throw new NotImplementedException();
    }

    async Task Cancel() => await BlazoredModal.CancelAsync();
}